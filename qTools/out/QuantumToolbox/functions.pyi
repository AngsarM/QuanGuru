from .customTypes import Matrix as Matrix, floatList as floatList
from .linearAlgebra import hc as hc, innerProd as innerProd, tensorProd as tensorProd, trace as trace
from .operators import sigmay as sigmay
from .states import densityMatrix as densityMatrix, mat2Vec as mat2Vec
from numpy import ndarray as ndarray
from typing import List, Tuple

def expectation(operator: Matrix, state: Matrix) -> float: ...
def fidelityPure(state1: Matrix, state2: Matrix) -> float: ...
def entropy(densMat: Matrix, base2: bool=...) -> float: ...
def traceDistance(A: Matrix, B: Matrix) -> float: ...
def sortedEigens(Ham: Matrix, mag: bool=...) -> Tuple[floatList, List[ndarray]]: ...
def concurrence(state: Matrix) -> float: ...
