image: "python:3.7"

before_script:
    - python --version
    - pip install -r requirements.txt

stages:
    - Static Analysis
    - Test
    - deploy

mypy:
    stage: Static Analysis
    tags:
        - qsimulations
    allow_failure: true
    script:
    - pwd
    - ls -l
    - python -m mypy qTools/QuantumToolbox/*.py

flake8:
    stage: Static Analysis
    tags:
        - qsimulations
    allow_failure: true
    script:
    - flake8 --max-line-length=140 qTools/*.py

pylint:
    stage: Static Analysis
    tags:
        - qsimulations
    allow_failure: true
    script:
        - pylint --rcfile=.pylintrc --output-format=text tagmaps | tee pylint.txt || pylint-exit $?
        - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
        - echo "Pylint score was $score"

        - anybadge -l pylint --value=$score --file=pylint.svg 2=red 4=orange 9=yellow 10=green
        - anybadge -l pipeline --value=passing --file=pipeline.svg passing=green failing=red
        - pypiversion=$(pip search tagmaps | cut -d "(" -f2 | cut -d ")" -f1)
        - anybadge -l "pypi package" --value=$pypiversion --file=pypi.svg passing=green failing=red
    artifacts:
        paths:
            - pylint.svg
            - pypi.svg
            - pipeline.svg
    only:
        - master

pages:
    stage: deploy
    tags:
        - qsimulations
    image: registry.gitlab.vgiscience.org/tud_ifk/alpine-mkdocs
    script:
        - mkdir .public
        - cp *.svg .public
    artifacts:
        name: pages
        paths:
        - public
    only:
        - master
        - ci-test



unit_test:
    stage: Test
    tags:
        - qsimulations
    allow_failure: true
    script:
    - pwd
    - ls -l
    - export PYTHONPATH="$PYTHONPATH:."
    - python -c "import sys;print(sys.path)"
    - pytest